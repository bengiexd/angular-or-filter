{"version":3,"sources":["angular-or-filter.js"],"names":["module","filter","keyParser","obj","keyList","angular","isObject","isArray","i","push","equals","obj1","obj2","type","fullText","isString","toLocaleLowerCase","indexOf","isNumber","toString","isEmpty","name","array","expression","comparator","isFullTextSearch","keys","returnList","keyIsArray","ary","key"],"mappings":";;;;;;;CAOC,SAAWA,GACRA,EAAOC,OAAO,YACV,WACI,GAAIC,GAAY,SAAUC,GAClB,GAAIC,KACJ,IAAIC,QAAQC,SAASH,KAASE,QAAQE,QAAQJ,GAAM,CAChD,IAAK,GAAIK,KAAKL,GAAKC,EAAQK,KAAKD,EAChC,OAAOJ,GAEP,MAAOD,IAGfO,EAAS,SAAUC,EAAMC,EAAMC,EAAMC,GACjC,MAAID,GAAaF,IAASC,EAElBP,QAAQU,SAASJ,IAASN,QAAQU,SAASH,GACxCE,EAA+E,IAA9DH,EAAKK,oBAAoBC,QAAQL,EAAKI,qBACnDL,EAAKK,qBAAuBJ,EAAKI,oBACnCX,QAAQa,SAASP,IAASG,EACoB,IAA5CH,EAAKQ,WAAWF,QAAQL,EAAKO,YAEjCR,GAAQC,GAGvBQ,EAAU,SAAUjB,GAChB,GAAW,MAAPA,EAAa,OAAO,CACxB,KAAK,GAAIkB,KAAQlB,GACb,OAAO,CAEX,QAAO,EAGf,OAAO,UAAUmB,EAAOC,EAAYC,EAAYC,GAC5C,GAAIC,GAAOxB,EAAUqB,GACjBI,KACAC,EAAavB,QAAQE,QAAQmB,EAIjC,IAHAF,EAAaA,IAAc,EAC3BC,EAAmBA,IAAoB,EAEnCL,EAAQG,GACRI,EAAaL,MAEb,KAAK,GAAIO,KAAOP,GACZ,GAAIM,IAAevB,QAAQE,QAAQgB,IAC/B,IAAK,GAAIO,KAAOJ,GACZ,GAAIhB,EAAOY,EAAMO,GAAKH,EAAKI,IAAOP,EAAWG,EAAKI,IAAON,EAAYC,GAAmB,CACpFE,EAAWlB,KAAKa,EAAMO,GACtB,YAGL,IAAID,GACP,IAAK,GAAIE,KAAOJ,GACZ,GAAIhB,EAAOgB,EAAKI,GAAMR,EAAMO,GAAML,EAAYC,GAAmB,CAC7DE,EAAWlB,KAAKa,EAAMO,GACtB,YAIJnB,GAAOY,EAAMO,GAAMN,EAAYC,EAAYC,IAC3CE,EAAWlB,KAAKa,EAAMO,GAKtC,OAAOF,QAIpBtB,QAAQL,OAAO","file":"angular-or-filter.min.js","sourcesContent":["/*!\n * @name: Angularjs Or Filter\n * @type: Filter\n * @version: v2.1.1\n * @author: Burak Demirezen\n * @License: Licensed under the MIT license.\n */\n;(function (module) {\n    module.filter('orFilter', [\n        function () {\n            var keyParser = function (obj) {\n                    var keyList = [];\n                    if (angular.isObject(obj) && !angular.isArray(obj)) {\n                        for (var i in obj) keyList.push(i);\n                        return keyList;\n                    } else {\n                        return obj;\n                    }\n                },\n                equals = function (obj1, obj2, type, fullText) {\n                    if (type) return obj1 === obj2;\n                    else {\n                        if (angular.isString(obj1) && angular.isString(obj2)) {\n                            if(fullText) return obj1.toLocaleLowerCase().indexOf(obj2.toLocaleLowerCase()) != -1;\n                            return obj1.toLocaleLowerCase() == obj2.toLocaleLowerCase();\n                        }else if(angular.isNumber(obj1) && fullText){\n                            return obj1.toString().indexOf(obj2.toString()) != -1;\n                        }\n                        return obj1 == obj2;\n                    }\n                },\n                isEmpty = function (obj) {\n                    if (obj == null) return true;\n                    for (var name in obj) {\n                        return false;\n                    }\n                    return true;\n                };\n\n            return function (array, expression, comparator, isFullTextSearch) {\n                var keys = keyParser(expression),\n                    returnList = [],\n                    keyIsArray = angular.isArray(keys);\n                comparator = comparator || false;\n                isFullTextSearch = isFullTextSearch || false;\n\n                if (isEmpty(expression)) {\n                    returnList = array;\n                } else {\n                    for (var ary in array) {\n                        if (keyIsArray && !angular.isArray(expression)) {\n                            for (var key in keys) {\n                                if (equals(array[ary][keys[key]], expression[keys[key]], comparator, isFullTextSearch)) {\n                                    returnList.push(array[ary]);\n                                    break;\n                                }\n                            }\n                        } else if (keyIsArray) {\n                            for (var key in keys) {\n                                if (equals(keys[key], array[ary], comparator, isFullTextSearch)) {\n                                    returnList.push(array[ary]);\n                                    break;\n                                }\n                            }\n                        } else {\n                            if (equals(array[ary], expression, comparator, isFullTextSearch)) {\n                                returnList.push(array[ary]);\n                            }\n                        }\n                    }\n                }\n                return returnList;\n            }\n        }\n    ]);\n})(angular.module('or-filter', []));"]}